eyJhbGciOiJIUzI1NiJ9.d29ya3NwYWNlOgogIGJhc2U6IC9zcnYvYXBwCiAgcGF0aDogc3JjL2dpdGh1Yi5jb20vYXBwbGVib3kvZHJvbmUtbGluZQoKcGlwZWxpbmU6CiAgdGVzdDoKICAgIGltYWdlOiBhcHBsZWJveS9nb2xhbmctdGVzdGluZwogICAgcHVsbDogdHJ1ZQogICAgZW52aXJvbm1lbnQ6CiAgICAgIENHT19FTkFCTEVEOiAxCiAgICAgIFRBR1M6IGxpbmUKICAgICAgR09QQVRIOiAvc3J2L2FwcAogICAgY29tbWFuZHM6CiAgICAgIC0gbWFrZSBkZXBfaW5zdGFsbAogICAgICAtIG1ha2UgdmV0CiAgICAgIC0gbWFrZSBsaW50CiAgICAgIC0gbWFrZSB0ZXN0CiAgICAgIC0gbWFrZSBidWlsZAogICAgd2hlbjoKICAgICAgZXZlbnQ6IFsgcHVzaCwgdGFnLCBwdWxsX3JlcXVlc3QgXQoKICB1cGRhdGVyOgogICAgaW1hZ2U6IGthcmFsYWJlL3hnby1sYXRlc3Q6bGF0ZXN0CiAgICBwdWxsOiB0cnVlCiAgICBlbnZpcm9ubWVudDoKICAgICAgQ0dPX0VOQUJMRUQ6IDEKICAgICAgVEFHUzogbGluZQogICAgICBHT1BBVEg6IC9zcnYvYXBwCiAgICBjb21tYW5kczoKICAgICAgLSBtYWtlIHJlbGVhc2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBbIHB1c2gsIHRhZyBdCiAgICAgIGJyYW5jaDogWyBtYXN0ZXIsIHJlZnMvdGFncy8qIF0KCiAgIyBkb2NrZXI6CiAgIyAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICMgICByZXBvOiBhcHBsZWJveS9kcm9uZS1saW5lCiAgIyAgIHRhZ3M6IFsgJyR7VEFHfScgXQogICMgICB3aGVuOgogICMgICAgIGV2ZW50OiBbIHRhZyBdCiAgIyAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0KCiAgIyBkb2NrZXI6CiAgIyAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICMgICByZXBvOiBhcHBsZWJveS9kcm9uZS1saW5lCiAgIyAgIHRhZ3M6IFsgJ2xhdGVzdCcgXQogICMgICB3aGVuOgogICMgICAgIGV2ZW50OiBbIHB1c2ggXQogICMgICAgIGJyYW5jaDogWyBtYXN0ZXIgXQoKICAjIGdpdGh1YjoKICAjICAgaW1hZ2U6IHBsdWdpbnMvZ2l0aHViLXJlbGVhc2UKICAjICAgZmlsZXM6CiAgIyAgICAgLSBkaXN0L3JlbGVhc2UvKgogICMgICB3aGVuOgogICMgICAgIGV2ZW50OiBbIHRhZyBdCiAgIyAgICAgYnJhbmNoOiBbIHJlZnMvdGFncy8qIF0K.kJTl5ixQHbrVPd_h7EHQXIiQAu8Qkq0WEXZYs8DdugE